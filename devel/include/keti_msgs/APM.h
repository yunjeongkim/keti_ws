// Generated by gencpp from file keti_msgs/APM.msg
// DO NOT EDIT!


#ifndef KETI_MSGS_MESSAGE_APM_H
#define KETI_MSGS_MESSAGE_APM_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace keti_msgs
{
template <class ContainerAllocator>
struct APM_
{
  typedef APM_<ContainerAllocator> Type;

  APM_()
    : APM_Fd_EN(false)
    , Mo_Fd_State(0)
    , APM_Fd_ErrBit_PD(false)
    , APM_Fd_ErrBit_APM(false)
    , APM_Fd_ErrBit_VInfo(false)
    , APM_Fd_ErrBit_SAS(false)
    , APM_Fd_Ovrrd_Ignore(false)
    , APM_Fd_Override(false)
    , APM_Fd_SteerAngle(0.0)
    , APM_Fd_Steer_Torq(0.0)
    , APM_Fd_Str_out_tq(0.0)
    , Mo_Fd_AlvCnt(0)  {
    }
  APM_(const ContainerAllocator& _alloc)
    : APM_Fd_EN(false)
    , Mo_Fd_State(0)
    , APM_Fd_ErrBit_PD(false)
    , APM_Fd_ErrBit_APM(false)
    , APM_Fd_ErrBit_VInfo(false)
    , APM_Fd_ErrBit_SAS(false)
    , APM_Fd_Ovrrd_Ignore(false)
    , APM_Fd_Override(false)
    , APM_Fd_SteerAngle(0.0)
    , APM_Fd_Steer_Torq(0.0)
    , APM_Fd_Str_out_tq(0.0)
    , Mo_Fd_AlvCnt(0)  {
  (void)_alloc;
    }



   typedef uint8_t _APM_Fd_EN_type;
  _APM_Fd_EN_type APM_Fd_EN;

   typedef uint8_t _Mo_Fd_State_type;
  _Mo_Fd_State_type Mo_Fd_State;

   typedef uint8_t _APM_Fd_ErrBit_PD_type;
  _APM_Fd_ErrBit_PD_type APM_Fd_ErrBit_PD;

   typedef uint8_t _APM_Fd_ErrBit_APM_type;
  _APM_Fd_ErrBit_APM_type APM_Fd_ErrBit_APM;

   typedef uint8_t _APM_Fd_ErrBit_VInfo_type;
  _APM_Fd_ErrBit_VInfo_type APM_Fd_ErrBit_VInfo;

   typedef uint8_t _APM_Fd_ErrBit_SAS_type;
  _APM_Fd_ErrBit_SAS_type APM_Fd_ErrBit_SAS;

   typedef uint8_t _APM_Fd_Ovrrd_Ignore_type;
  _APM_Fd_Ovrrd_Ignore_type APM_Fd_Ovrrd_Ignore;

   typedef uint8_t _APM_Fd_Override_type;
  _APM_Fd_Override_type APM_Fd_Override;

   typedef float _APM_Fd_SteerAngle_type;
  _APM_Fd_SteerAngle_type APM_Fd_SteerAngle;

   typedef float _APM_Fd_Steer_Torq_type;
  _APM_Fd_Steer_Torq_type APM_Fd_Steer_Torq;

   typedef float _APM_Fd_Str_out_tq_type;
  _APM_Fd_Str_out_tq_type APM_Fd_Str_out_tq;

   typedef uint8_t _Mo_Fd_AlvCnt_type;
  _Mo_Fd_AlvCnt_type Mo_Fd_AlvCnt;





  typedef boost::shared_ptr< ::keti_msgs::APM_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::keti_msgs::APM_<ContainerAllocator> const> ConstPtr;

}; // struct APM_

typedef ::keti_msgs::APM_<std::allocator<void> > APM;

typedef boost::shared_ptr< ::keti_msgs::APM > APMPtr;
typedef boost::shared_ptr< ::keti_msgs::APM const> APMConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::keti_msgs::APM_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::keti_msgs::APM_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace keti_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'keti_msgs': ['/home/dallddungi/keti_ws/src/keti_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::keti_msgs::APM_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::keti_msgs::APM_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::keti_msgs::APM_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::keti_msgs::APM_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::keti_msgs::APM_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::keti_msgs::APM_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::keti_msgs::APM_<ContainerAllocator> >
{
  static const char* value()
  {
    return "db7178b9020923d4d2402ddc447555fb";
  }

  static const char* value(const ::keti_msgs::APM_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xdb7178b9020923d4ULL;
  static const uint64_t static_value2 = 0xd2402ddc447555fbULL;
};

template<class ContainerAllocator>
struct DataType< ::keti_msgs::APM_<ContainerAllocator> >
{
  static const char* value()
  {
    return "keti_msgs/APM";
  }

  static const char* value(const ::keti_msgs::APM_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::keti_msgs::APM_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# Messege that has a data related to steering angle from ECU\n\
bool APM_Fd_EN    # Manual/Auto mode transformation request: 0:disable, 1: enable\n\
uint8 Mo_Fd_State\n\
bool APM_Fd_ErrBit_PD\n\
bool APM_Fd_ErrBit_APM\n\
bool APM_Fd_ErrBit_VInfo\n\
bool APM_Fd_ErrBit_SAS\n\
bool APM_Fd_Ovrrd_Ignore\n\
bool APM_Fd_Override\n\
float32 APM_Fd_SteerAngle   # current steering angle\n\
float32 APM_Fd_Steer_Torq # steering torqe value\n\
float32 APM_Fd_Str_out_tq\n\
#int8 APM_Fd_Str_out_tq\n\
uint8 Mo_Fd_AlvCnt\n\
\n\
\n\
\n\
\n\
\n\
";
  }

  static const char* value(const ::keti_msgs::APM_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::keti_msgs::APM_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.APM_Fd_EN);
      stream.next(m.Mo_Fd_State);
      stream.next(m.APM_Fd_ErrBit_PD);
      stream.next(m.APM_Fd_ErrBit_APM);
      stream.next(m.APM_Fd_ErrBit_VInfo);
      stream.next(m.APM_Fd_ErrBit_SAS);
      stream.next(m.APM_Fd_Ovrrd_Ignore);
      stream.next(m.APM_Fd_Override);
      stream.next(m.APM_Fd_SteerAngle);
      stream.next(m.APM_Fd_Steer_Torq);
      stream.next(m.APM_Fd_Str_out_tq);
      stream.next(m.Mo_Fd_AlvCnt);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct APM_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::keti_msgs::APM_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::keti_msgs::APM_<ContainerAllocator>& v)
  {
    s << indent << "APM_Fd_EN: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.APM_Fd_EN);
    s << indent << "Mo_Fd_State: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.Mo_Fd_State);
    s << indent << "APM_Fd_ErrBit_PD: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.APM_Fd_ErrBit_PD);
    s << indent << "APM_Fd_ErrBit_APM: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.APM_Fd_ErrBit_APM);
    s << indent << "APM_Fd_ErrBit_VInfo: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.APM_Fd_ErrBit_VInfo);
    s << indent << "APM_Fd_ErrBit_SAS: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.APM_Fd_ErrBit_SAS);
    s << indent << "APM_Fd_Ovrrd_Ignore: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.APM_Fd_Ovrrd_Ignore);
    s << indent << "APM_Fd_Override: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.APM_Fd_Override);
    s << indent << "APM_Fd_SteerAngle: ";
    Printer<float>::stream(s, indent + "  ", v.APM_Fd_SteerAngle);
    s << indent << "APM_Fd_Steer_Torq: ";
    Printer<float>::stream(s, indent + "  ", v.APM_Fd_Steer_Torq);
    s << indent << "APM_Fd_Str_out_tq: ";
    Printer<float>::stream(s, indent + "  ", v.APM_Fd_Str_out_tq);
    s << indent << "Mo_Fd_AlvCnt: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.Mo_Fd_AlvCnt);
  }
};

} // namespace message_operations
} // namespace ros

#endif // KETI_MSGS_MESSAGE_APM_H
